# This is a basic workflow to help you get started with Actions

name: dialog

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PUB_IP_CURL: https://ipinfo.io/ip      
    steps:
      - name: checkout-dialog
        uses: actions/checkout@v2
        with:
          repository: mozilla/dialog
          path: './dialog'   
      - name: making <GITHUB_RUN_NUMBER> tagged docker image
        run: |
          cd ./dialog
          
          cat > Dockerfile << 'EOL'
          from node:lts as build
          workdir /app
          copy . .
          run mkdir certs && openssl req -x509 -newkey rsa:2048 -sha256 -days 36500 -nodes -keyout certs/privkey.pem -out certs/fullchain.pem -subj '/CN=dialog'
          run npm ci
          from node:lts-slim
          workdir /app
          copy --from=build /app /app
          run apt-get update && apt-get install -y jq curl dnsutils
          run printf 'while true; do (echo -e "HTTP/1.1 200 OK\r\n") | nc -lp 1111 > /dev/null; done' > /healthcheck.sh && chmod +x /healthcheck.sh
          run echo ' \n\
            /healthcheck.sh& \n\
            printf "%b" "$perms_key">/app/certs/perms.pub.pem \n\
            cat /app/certs/perms.pub.pem \n\            
            export MEDIASOUP_ANNOUNCED_IP=$(curl ${{ env.PUB_IP_CURL }}) \n\
            echo "MEDIASOUP_ANNOUNCED_IP: $MEDIASOUP_ANNOUNCED_IP" \n\
            export INTERACTIVE=nope \n\
            npm start' >> /init.sh
          run cat /init.sh
          cmd bash /init.sh
          EOL
          docker build -t ${{ secrets.DOCKER_HUB_USR }}/dialog:$GITHUB_RUN_NUMBER . > /dev/null
          echo ${{ secrets.DOCKER_HUB_PWD }} | sudo docker login --username ${{ secrets.DOCKER_HUB_USR }} --password-stdin             
          sudo docker push ${{ secrets.DOCKER_HUB_USR }}/dialog:$GITHUB_RUN_NUMBER
  push-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev
    steps:
      - name: pull <GITHUB_RUN_NUMBER>, re-tag to dev, push
        run: |
          echo ${{ secrets.DOCKER_HUB_PWD }} | sudo docker login --username ${{ secrets.DOCKER_HUB_USR }} --password-stdin             
          docker pull ${{ secrets.DOCKER_HUB_USR }}/dialog:$GITHUB_RUN_NUMBER
          docker tag ${{ secrets.DOCKER_HUB_USR }}/dialog:$GITHUB_RUN_NUMBER ${{ secrets.DOCKER_HUB_USR }}/dialog:dev
          sudo docker push ${{ secrets.DOCKER_HUB_USR }}/dialog:dev
  push-prod:
    runs-on: ubuntu-latest
    needs: push-dev
    environment:
      name: prod
    steps:
      - name: pull <GITHUB_RUN_NUMBER>, re-tag to prod, push
        run: |
          echo ${{ secrets.DOCKER_HUB_PWD }} | sudo docker login --username ${{ secrets.DOCKER_HUB_USR }} --password-stdin             
          docker pull ${{ secrets.DOCKER_HUB_USR }}/dialog:$GITHUB_RUN_NUMBER
          docker tag ${{ secrets.DOCKER_HUB_USR }}/dialog:$GITHUB_RUN_NUMBER ${{ secrets.DOCKER_HUB_USR }}/dialog:prod
          sudo docker push ${{ secrets.DOCKER_HUB_USR }}/dialog:prod
