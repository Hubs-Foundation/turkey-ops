AWSTemplateFormatVersion: 2010-09-09
Parameters:
  mainStackName:
    Type: String  
  retConfigSsmArn:
    Type: String    
  permsKeySsmArn:
    Type: String
Resources:
  k8sAdmRole:
    Type: "AWS::IAM::Role"
    # Metadata:
    #   cfn-lint:
    #     config:
    #       ignore_checks: [EIAMPolicyWildcardResource]
    #       ignore_reasons:
    #         EIAMPolicyWildcardResource: resources are created after stack is created by k8s/helm/eks resource types, and as such are unkown at role cretion time
    Properties:
      RoleName: !Join ['-', [!Ref mainStackName, k8sAdmRole]]
      # AssumeRolePolicyDocument:
      #   Version: 2012-10-17
      #   Statement:
      #     - Effect: Allow
      #       Principal:
      #         Service: lambda.amazonaws.com
      #       Action: sts:AssumeRole
      Policies:
        - PolicyName: eksStackPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "eks:DescribeFargateProfile"
                  - "eks:ListTagsForResource"
                  - "eks:ListUpdates"
                  - "eks:DisassociateIdentityProviderConfig"
                  - "eks:DescribeCluster"
                  - "eks:CreateAddon"
                  - "eks:DeleteAddon"
                  - "eks:UntagResource"
                  - "eks:ListClusters"
                  - "eks:UpdateClusterVersion"
                  - "eks:AssociateEncryptionConfig"
                  - "eks:UpdateNodegroupConfig"
                  - "eks:DeleteCluster"
                  - "eks:DeleteFargateProfile"
                  - "eks:UpdateClusterConfig"
                  - "eks:DescribeAddonVersions"
                  - "eks:DescribeUpdate"
                  - "eks:CreateCluster"
                  - "eks:DescribeIdentityProviderConfig"
                  - "eks:ListAddons"
                  - "eks:DescribeAddon"
                  - "eks:UpdateNodegroupVersion"
                  - "eks:AccessKubernetesApi"
                  - "eks:AssociateIdentityProviderConfig"
                  - "eks:DeleteNodegroup"
                  - "eks:CreateFargateProfile"
                  - "eks:UpdateAddon"
                  - "eks:TagResource"
                  - "eks:ListNodegroups"
                  - "eks:ListIdentityProviderConfigs"
                  - "eks:CreateNodegroup"
                  - "eks:ListFargateProfiles"
                  - "eks:DescribeNodegroup"
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - lambda:InvokeFunction
                  - s3:GetObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource:
                  - "*"
              # - Effect: Allow
              #   Action:
              #     - lambda:AddPermission
              #     - lambda:RemovePermission
                Resource:  "*"
              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:  "*"
Outputs:
  k8sAdmRoleArn:
    Value: !GetAtt k8sAdmRole.Arn