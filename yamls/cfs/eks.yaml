AWSTemplateFormatVersion: 2010-09-09

Parameters:
  mainStackName:
    Type: String
  VPC:
    Type: String  
  PublicSubnet1Id:
    Type: String
  PublicSubnet2Id:
    Type: String

Resources:
  clusterRole:
    Type: "AWS::IAM::Role"
    Properties: 
      RoleName: !Sub ${mainStackName}-eks
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
            Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole
  nodeRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${mainStackName}-node
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action: sts:AssumeRole       
  streamSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: provides udp access for turkey stream services
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: udp
        FromPort: 35000
        ToPort: 65000
        CidrIp: 0.0.0.0/0
  Cluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref mainStackName
      Version: '1.21'
      RoleArn: !GetAtt clusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
        - !Ref streamSg
        SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        # SecurityGroupIds:
        #   - sg-6979fe18:
  Nodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Sub ${Cluster}
      NodeRole: !GetAtt nodeRole.Arn
      ScalingConfig:
        MinSize: 2
        DesiredSize: 3
        MaxSize: 5
      # Labels:
      #   Key1: Value1
      #   Key2: Value2
      Subnets:
      - !Ref PublicSubnet1Id
      - !Ref PublicSubnet2Id

Outputs:
  eksArn:
    Value: !GetAtt Cluster.Arn
  SecurityGroupId:
    Value: !GetAtt Cluster.ClusterSecurityGroupId