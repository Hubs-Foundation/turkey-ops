apiVersion: v1
kind: Namespace
metadata:
  name: hc-dev0
  labels:
    TurkeyId: someString
---
######################################################################################
###################################### ingress #######################################
######################################################################################
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: turkey-https
  namespace: hc-dev0
spec:
  entryPoints:
    - https
  routes:
  - kind: Rule
    match: Host(`dev0.myhubs.net`) && PathPrefix(`/`)
    services:
    - kind: Service
      name: ret
      passHostHeader: true
      port: 4000
  - kind: Rule
    match: (Host(`dev0-assets.myhubs.net`) || Host(`dev0-cors.myhubs.net`)) && (PathPrefix(`/files/`) || PathPrefix(`/http`))
    services:
    - kind: Service
      name: ret
      passHostHeader: true
      port: 4000
    middlewares:
    - name: ret-cors
      namespace: hc-dev0
  - kind: Rule
    match: (Host(`dev0-assets.myhubs.net`) || Host(`dev0-cors.myhubs.net`)) && PathPrefix(`/hubs`)
    services:
    - kind: Service
      name: hubs
      passHostHeader: true
      port: 8080
  - kind: Rule
    match: (Host(`dev0-assets.myhubs.net`) || Host(`dev0-cors.myhubs.net`)) && PathPrefix(`/spoke`)
    services:
    - kind: Service
      name: spoke
      passHostHeader: true
      port: 8080      
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: ret-cors
  namespace: hc-dev0
spec:
  headers:
    customResponseHeaders:
      Access-Control-Allow-Origin: "*"
---
########################################################################
###################### configs #########################################
########################################################################  
apiVersion: v1
kind: Secret
metadata:
  name: configs
  namespace: hc-dev0
stringData:
  NODE_COOKIE: foobar
  SUB_DOMAIN: dev0
  DOMAIN: myhubs.net
  DB_USER: postgres
  DB_PASS: itjfHE4HuS
  DB_NAME: ret_dev0
  DB_HOST: pgbouncer.turkey-services
  DB_HOST_T: pgbouncer-t.turkey-services
  GUARDIAN_KEY: strongSecret#1
  PERMS_KEY: -----BEGIN RSA PRIVATE KEY-----\\nMIIEpgIBAAKCAQEA3RY0qLmdthY6Q0RZ4oyNQSL035BmYLNdleX1qVpG1zfQeLWf\\n/otgc8Ho2w8y5wW2W5vpI4a0aexNV2evgfsZKtx0q5WWwjsr2xy0Ak1zhWTgZD+F\\noHVGJ0xeFse2PnEhrtWalLacTza5RKEJskbNiTTu4fD+UfOCMctlwudNSs+AkmiP\\nSxc8nWrZ5BuvdnEXcJOuw0h4oyyUlkmj+Oa/ZQVH44lmPI9Ih0OakXWpIfOob3X0\\nXqcdywlMVI2hzBR3JNodRjyEz33p6E//lY4Iodw9NdcRpohGcxcgQ5vf4r4epLIa\\ncr0y5w1ZiRyf6BwyqJ6IBpA7yYpws3r9qxmAqwIDAQABAoIBAQCgwy/hbK9wo3MU\\nTNRrdzaTob6b/l1jfanUgRYEYl/WyYAu9ir0JhcptVwERmYGNVIoBRQfQClaSHjo\\n0L1/b74aO5oe1rR8Yhh+yL1gWz9gRT0hyEr7paswkkhsmiY7+3m5rxsrfinlM+6+\\nJ7dsSi3U0ofOBbZ4kvAeEz/Y3OaIOUbQraP312hQnTVQ3kp7HNi9GcLK9rq2mASu\\nO0DxDHXdZMsRN1K4tOKRZDsKGAEfL2jKN7+ndvsDhb4mAQaVKM8iw+g5O4HDA8uB\\nmwycaWhjilZWEyUyqvXE8tOMLS59sq6i1qrf8zIMWDOizebF/wnrQ42kzt5kQ0ZJ\\nwCPOC3sxAoGBAO6KfWr6WsXD6phnjVXXi+1j3azRKJGQorwQ6K3bXmISdlahngas\\nmBGBmI7jYTrPPeXAHUbARo/zLcbuGCf1sPipkAHYVC8f9aUbA205BREB15jNyXr3\\nXzhR/ronbn0VeR9iRua2FZjVChz22fdz9MvRJiinP8agYIQ4LovDk3lzAoGBAO1E\\nrZpOuv3TMQffPaPemWuvMYfZLgx2/AklgYqSoi683vid9HEEAdVzNWMRrOg0w5EH\\nWMEMPwJTYvy3xIgcFmezk5RMHTX2J32JzDJ8Y/uGf1wMrdkt3LkPRfuGepEDDtBa\\nrUSO/MeGXLu5p8QByUZkvTLJ4rJwF2HZBUehrm3pAoGBANg1+tveNCyRGbAuG/M0\\nvgXbwO+FXWojWP1xrhT3gyMNbOm079FI20Ty3F6XRmfRtF7stRyN5udPGaz33jlJ\\n/rBEsNybQiK8qyCNzZtQVYFG1C4SSI8GbO5Vk7cTSphhwDlsEKvJWuX+I36BWKts\\nFPQwjI/ImIvmjdUKP1Y7XQ51AoGBALWa5Y3ASRvStCqkUlfFH4TuuWiTcM2VnN+b\\nV4WrKnu/kKKWs+x09rpbzjcf5kptaGrvRp2sM+Yh0RhByCmt5fBF4OWXRJxy5lMO\\nT78supJgpcbc5YvfsJvs9tHIYrPvtT0AyrI5B33od74wIhrCiz5YCQCAygVuCleY\\ndpQXSp1RAoGBAKjasot7y/ErVxq7LIpGgoH+XTxjvMsj1JwlMeK0g3sjnun4g4oI\\nPBtpER9QaSFi2OeYPklJ2g2yvFcVzj/pFk/n1Zd9pWnbU+JIXBYaHTjmktLeZHsb\\nrTEKATo+Y1Alrhpr/z7gXXDfuKKXHkVRiper1YRAxELoLJB8r7LWeuIb\\n-----END RSA PRIVATE KEY-----
  PHX_KEY: strongSecret#2
  SMTP_SERVER: email-smtp.us-east-1.amazonaws.com
  SMTP_PORT: "25"
  SMTP_USER: AKIAYEJRSWRAQUI7U3J4
  SMTP_PASS: BL+rv9q1noXMNWB4D8re8DUGQ7dPXlL6aq5cqod18UFC
  ADM_EMAIL: gtan@mozilla.com
  PGRST_DB_URI: postgres://postgres:itjfHE4HuS@pgbouncer.turkey-services/ret_dev0
  PGRST_JWT_SECRET: "{\"e\":\"AQAB\",\"kty\":\"RSA\",\"n\":\"3RY0qLmdthY6Q0RZ4oyNQSL035BmYLNdleX1qVpG1zfQeLWf_otgc8Ho2w8y5wW2W5vpI4a0aexNV2evgfsZKtx0q5WWwjsr2xy0Ak1zhWTgZD-FoHVGJ0xeFse2PnEhrtWalLacTza5RKEJskbNiTTu4fD-UfOCMctlwudNSs-AkmiPSxc8nWrZ5BuvdnEXcJOuw0h4oyyUlkmj-Oa_ZQVH44lmPI9Ih0OakXWpIfOob3X0XqcdywlMVI2hzBR3JNodRjyEz33p6E__lY4Iodw9NdcRpohGcxcgQ5vf4r4epLIacr0y5w1ZiRyf6BwyqJ6IBpA7yYpws3r9qxmAqw\"}"
---
########################################################################
###################### reticulum #######################################
########################################################################
apiVersion: v1
kind: PersistentVolumeClaim # no plan to polluting the cluster with custom k8s operator managed storageClass so aws' gp2/ebs will be used
metadata:
  name: dev0-pvc
  namespace: hc-dev0
spec:
  accessModes:
    - ReadWriteOnce # only mode supported by the cheap and clean gp2 / ebs on aws. effectively preventing deployment/pod scaling -- not needed after we made ret stateless with storage redesign
  resources:
    requests:
      storage: 1Gi  # will use the default gp2 storageClass, minimum request size is 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reticulum
  namespace: hc-dev0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reticulum
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: reticulum
    spec:
      volumes:
      - name: storage 
        persistentVolumeClaim:
          claimName: dev0-pvc
      containers:
      - name: reticulum
        image: mozillareality/ret:58
        ports:
        - containerPort: 9100
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: "/storage"
          name: storage          
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: turkeyCfg_NODE_COOKIE
          valueFrom:
            secretKeyRef:
              name: configs
              key: NODE_COOKIE
        - name: turkeyCfg_SUB_DOMAIN
          valueFrom:
            secretKeyRef:
              name: configs
              key: SUB_DOMAIN
        - name: turkeyCfg_DOMAIN
          valueFrom:
            secretKeyRef:
              name: configs
              key: DOMAIN
        - name: turkeyCfg_DB_USER
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_USER
        - name: turkeyCfg_DB_PASS
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_PASS
        - name: turkeyCfg_DB_NAME
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_NAME
        - name: turkeyCfg_DB_HOST
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_HOST
        - name: turkeyCfg_DB_HOST_T
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_HOST_T
        - name: turkeyCfg_GUARDIAN_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: GUARDIAN_KEY
        - name: turkeyCfg_PERMS_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: PERMS_KEY
        - name: turkeyCfg_PHX_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: PHX_KEY
        - name: turkeyCfg_SMTP_SERVER
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_SERVER
        - name: turkeyCfg_SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_PORT
        - name: turkeyCfg_SMTP_USER
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_USER
        - name: turkeyCfg_SMTP_PASS
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_PASS
        - name: turkeyCfg_ADM_EMAIL
          valueFrom:
            secretKeyRef:
              name: configs
              key: ADM_EMAIL
        - name: turkeyCfg_ITA_HOST
          value: http://turkey-api.turkey-services
        - name: turkeyCfg_IMG_PROXY
          value: http://nearspark.hc-dev0
        - name: turkeyCfg_HEADER_AUTHZ
          value: "duuuuuuuuuuuuuuuuuuuuuuuuumy"
        - name: turkeyCfg_YTDL_HOST
          value: "http://localhost:8080"
        # - name: turkeyCfg_YTDL_HOST
        #   value: "http://turkey-api.turkey-services:888/ytdl"            
        livenessProbe:
          httpGet:
            path: "http://reticulum.dev0"
            port: 1111
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 120
        resources:
          requests:
            memory: 100Mi
            cpu: 0.05        
          limits:
            memory: 1Gi
            cpu: 0.5
      - name: postgrest
        image: postgrest/postgrest:v8.0.0
        ports:
        - containerPort: 3000
        imagePullPolicy: IfNotPresent
        env:
        - name: PGRST_LOG_LEVEL
          value: info        
        - name: PGRST_DB_SCHEMA
          value: ret0_admin
        - name: PGRST_DB_ANON_ROLE
          value: postgres          
        - name: PGRST_DB_URI
          valueFrom:
            secretKeyRef:
              name: configs
              key: PGRST_DB_URI
        - name: PGRST_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: configs
              key: PGRST_JWT_SECRET
      - name: ytdl
        image: mozillareality/ytdl:6_2021.6.6
        ports:
        - containerPort: 8080
        imagePullPolicy: IfNotPresent              
---
apiVersion: v1
kind: Service
metadata:
  name: ret
  namespace: hc-dev0
spec:
  clusterIP: None
  ports:
  - name: https-reticulum
    port: 4000
    targetPort: 4000
  selector:
    app: reticulum
---
########################################################################
######################   hubs   ########################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubs
  namespace: hc-dev0
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: hubs
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: hubs
    spec:
      containers:
        - name: hubs
          image: mozillareality/hubs:dev
          imagePullPolicy: Always
          env:
          - name: SUB_DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: SUB_DOMAIN
          - name: DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: DOMAIN
          - name: turkeyCfg_postgrest_server
            value: 
          - name: turkeyCfg_thumbnail_server
            value: notyet
          - name: turkeyCfg_base_assets_path
            value: https://dev0-assets.myhubs.net/hubs/
          - name: turkeyCfg_non_cors_proxy_domains
            value: dev0.myhubs.net,dev0-assets.myhubs.net
          - name: turkeyCfg_reticulum_server
            value: dev0.myhubs.net
          - name: turkeyCfg_cors_proxy_server
            value: dev0-cors.myhubs.net
          - name: turkeyCfg_ga_tracking_id
            value: 
          - name: turkeyCfg_shortlink_domain
            value: notyet
          - name: turkeyCfg_ita_server
            value: 
          - name: turkeyCfg_sentry_dsn
            value: 
          livenessProbe:
            httpGet:
              path: "http://hubs.dev0"
              port: 1111
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 120
          resources:
            requests:
              memory: 100Mi
              cpu: 0.05
            limits:
              memory: 1Gi
              cpu: 0.5
---
apiVersion: v1
kind: Service
metadata:
  name: hubs
  namespace: hc-dev0
spec:
  clusterIP: None
  ports:
  - name: https-hubs
    port: 8080
    targetPort: 8080
  selector:
    app: hubs
---
########################################################################
######################   spoke   ########################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spoke
  namespace: hc-dev0
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: spoke
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: spoke
    spec:
      containers:
        - name: spoke
          image: mozillareality/spoke:2
          imagePullPolicy: Always
          env:
          - name: SUB_DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: SUB_DOMAIN
          - name: DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: DOMAIN
          - name: turkeyCfg_base_assets_path
            value: https://dev0-assets.myhubs.net/spoke/
          - name: turkeyCfg_cors_proxy_server
            value: dev0-cors.myhubs.net
          - name: turkeyCfg_ga_tracking_id
            value: 
          - name: turkeyCfg_hubs_server
            value: dev0.myhubs.net
          - name: turkeyCfg_is_moz
            value: "false"
          - name: turkeyCfg_non_cors_proxy_domains
            value: dev0.myhubs.net,dev0-assets.myhubs.net
          - name: turkeyCfg_reticulum_server
            value: dev0.myhubs.net
          - name: turkeyCfg_sentry_dsn
            value: 
          - name: turkeyCfg_thumbnail_server
            value: nearspark.hc-dev0:5000
          livenessProbe:
            httpGet:
              path: "http://spoke.dev0"
              port: 1111
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 120
          resources:
            requests:
              memory: 100Mi
              cpu: 0.05
            limits:
              memory: 1Gi
              cpu: 0.5
---
apiVersion: v1
kind: Service
metadata:
  name: spoke
  namespace: hc-dev0
spec:
  clusterIP: None
  ports:
  - name: https-spoke
    port: 8080
    targetPort: 8080
  selector:
    app: spoke
---
########################################################################
######################   nearspark   ########################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nearspark
  namespace: hc-dev0
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: nearspark
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nearspark
    spec:
      containers:
      - name: nearspark
        image: mozillareality/nearspark:dev
        ports:
        - containerPort: 5000
        imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: nearspark
  namespace: hc-dev0
spec:
  ports:
  - name: http
    port: 5000
    targetPort: 5000
  selector:
    app: nearspark    