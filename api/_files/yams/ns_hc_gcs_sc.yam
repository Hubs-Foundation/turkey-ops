apiVersion: v1
kind: Namespace
metadata:
  name: hc-{{.HubId}}
  labels:
    Subdomain: {{.Subdomain}}
    Tier: {{.Tier}}
    CcuLimit: "{{.CcuLimit}}"
    StorageLimit: "{{.StorageLimit}}"

---
########################################################################
###################### configs #########################################
########################################################################  
apiVersion: v1
kind: Secret
metadata:
  name: configs
  namespace: hc-{{.HubId}}
stringData:
  NODE_COOKIE: foobar
  SUB_DOMAIN: {{.Subdomain}}
  DOMAIN: {{.Domain}}
  DB_USER: postgres
  DB_PASS: {{.DBpass}}
  DB_NAME: {{.DBname}}
  DB_HOST: pgbouncer.turkey-services
  DB_HOST_T: pgbouncer-t.turkey-services
  PERMS_KEY: {{.PermsKey}}
  SMTP_SERVER: {{.SmtpServer}}
  SMTP_PORT: "{{.SmtpPort}}"
  SMTP_USER: {{.SmtpUser}}
  SMTP_PASS: {{.SmtpPass}}
  ADM_EMAIL: {{.UserEmail}}
  PGRST_DB_URI: postgres://postgres:{{.DBpass}}@pgbouncer.turkey-services/{{.DBname}}
  PGRST_JWT_SECRET: "{{.JWK}}"
  GCP_SA_HMAC_KEY: {{.GCP_SA_HMAC_KEY}}
  GCP_SA_HMAC_SECRET: {{.GCP_SA_HMAC_SECRET}}
  GUARDIAN_KEY: {{.GuardianKey}}
  PHX_KEY: {{.PhxKey}}
  PORTAL_ACCESS_KEY: {{.PORTAL_ACCESS_KEY}}
  HEADER_AUTHZ: {{.HEADER_AUTHZ}}
  SKETCHFAB_API_KEY: {{.SKETCHFAB_API_KEY}}
data:
  GCP_SA_KEY: {{.GCP_SA_KEY_b64}}  
---
######################################################################################
###################################### ingress #######################################
######################################################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: turkey-https
  namespace: hc-{{.HubId}}
  annotations:
    kubernetes.io/ingress.class: haproxy
    haproxy.org/server-ssl: "true"
    haproxy.org/response-set-header: |
      access-control-allow-origin "https://{{.Subdomain}}.{{.Domain}}"
    haproxy.org/path-rewrite: /api-internal(.*) /_drop_
spec:
  rules:
  - host: {{.Subdomain}}.{{.Domain}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ret
            port: 
              number: 4000
  - host: {{.Subdomain}}-assets.{{.Domain}}
    http:
      paths:
      - path: /files/
        pathType: Prefix
        backend:
          service:
            name: ret
            port: 
              number: 4000
      - path: /http
        pathType: ImplementationSpecific
        backend:
          service:
            name: ret
            port: 
              number: 4000                  
      - path: /hubs
        pathType: Prefix
        backend:
          service:
            name: hubs
            port: 
              number: 8080
      - path: /spoke
        pathType: Prefix
        backend:
          service:
            name: spoke
            port: 
              number: 8080                          
  - host: {{.Subdomain}}-cors.{{.Domain}}
    http:
      paths:
      - path: /files/
        pathType: Prefix
        backend:
          service:
            name: ret
            port: 
              number: 4000
      - path: /http
        pathType: ImplementationSpecific
        backend:
          service:
            name: ret
            port: 
              number: 4000                  
      - path: /hubs
        pathType: Prefix
        backend:
          service:
            name: hubs
            port: 
              number: 8080
      - path: /spoke
        pathType: Prefix
        backend:
          service:
            name: spoke
            port: 
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: turkey-nearspark
  namespace: hc-{{.HubId}}
  annotations:
    kubernetes.io/ingress.class: haproxy      
spec:
  rules:        
  - host: {{.Subdomain}}-nearspark.{{.Domain}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nearspark
            port: 
              number: 5000              
---
########################################################################
###################### reticulum #######################################
########################################################################
# apiVersion: v1
# kind: PersistentVolumeClaim # no plan to polluting the cluster with custom k8s operator managed storageClass so aws' gp2/ebs will be used
# metadata:
#   name: {{.Subdomain}}-pvc
#   namespace: hc-{{.HubId}}
# spec:
#   accessModes:
#     - ReadWriteOnce # only mode supported by the cheap and clean gp2 / ebs on aws. effectively preventing deployment/pod scaling -- not needed after we made ret stateless with storage redesign
#   resources:
#     requests:
#       storage: 12Gi  # will use the default gp2 storageClass, minimum request size is 1Gi
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reticulum
  namespace: hc-{{.HubId}}
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: reticulum
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: reticulum
    spec:
      volumes:
      - name: fuse 
        emptyDir: {}
      containers:
      - name: reticulum
        volumeMounts:
        - name: fuse
          mountPath: /storage
          mountPropagation: Bidirectional
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN          
        image: mozillareality/ret:stable-latest
        ports:
        - containerPort: 9100
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: turkeyCfg_NODE_COOKIE
          valueFrom:
            secretKeyRef:
              name: configs
              key: NODE_COOKIE
        - name: turkeyCfg_SUB_DOMAIN
          valueFrom:
            secretKeyRef:
              name: configs
              key: SUB_DOMAIN
        - name: turkeyCfg_DOMAIN
          valueFrom:
            secretKeyRef:
              name: configs
              key: DOMAIN
        - name: turkeyCfg_DB_USER
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_USER
        - name: turkeyCfg_DB_PASS
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_PASS
        - name: turkeyCfg_DB_NAME
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_NAME
        - name: turkeyCfg_DB_HOST
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_HOST
        - name: turkeyCfg_DB_HOST_T
          valueFrom:
            secretKeyRef:
              name: configs
              key: DB_HOST_T
        - name: turkeyCfg_GUARDIAN_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: GUARDIAN_KEY
        - name: turkeyCfg_PERMS_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: PERMS_KEY
        - name: turkeyCfg_PHX_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: PHX_KEY
        - name: turkeyCfg_SMTP_SERVER
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_SERVER
        - name: turkeyCfg_SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_PORT
        - name: turkeyCfg_SMTP_USER
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_USER
        - name: turkeyCfg_SMTP_PASS
          valueFrom:
            secretKeyRef:
              name: configs
              key: SMTP_PASS
        - name: turkeyCfg_ADM_EMAIL
          valueFrom:
            secretKeyRef:
              name: configs
              key: ADM_EMAIL
        - name: turkeyCfg_SKETCHFAB_API_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: SKETCHFAB_API_KEY              
        # - name: turkeyCfg_ITA_HOST
        #   value: http://ita
        - name: turkeyCfg_IMG_PROXY
          value: http://nearspark.hc-{{.HubId}}
        - name: turkeyCfg_HEADER_AUTHZ
          valueFrom:
            secretKeyRef:
              name: configs
              key: HEADER_AUTHZ
        - name: turkeyCfg_PORTAL_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: PORTAL_ACCESS_KEY
        - name: turkeyCfg_YTDL_HOST
          value: "https://hubs-ytdl-fsu7tyt32a-uc.a.run.app"
        # - name: turkeyCfg_YTDL_HOST
        #   value: "http://ytdl.turkey-services"
        - name: turkeyCfg_PHOTOMNEMONIC
          value: "http://photomnemonic:5000"  
        - name: turkeyCfg_SPEELYCAPTOR
          value: "http://speelycaptor:5000"
        - name: turkeyCfg_STORAGE_QUOTA_GB
          value: "{{.StorageLimit}}"
        livenessProbe:
          httpGet:
            path: https://localhost/health
            port: 4000
            scheme: HTTPS
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 120
        resources:
          requests:
            memory: 100Mi
            cpu: 0.05        
          limits:
            memory: 1Gi
            cpu: 0.5
      - name: postgrest
        image: mozillareality/postgrest:v8.0.0
        ports:
        - containerPort: 3000
        imagePullPolicy: IfNotPresent
        env:
        - name: PGRST_LOG_LEVEL
          value: info        
        - name: PGRST_DB_SCHEMA
          value: ret0_admin
        - name: PGRST_DB_ANON_ROLE
          value: postgres          
        - name: PGRST_DB_URI
          valueFrom:
            secretKeyRef:
              name: configs
              key: PGRST_DB_URI
        - name: PGRST_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: configs
              key: PGRST_JWT_SECRET
      - name: ita
        image: mozillareality/ita:stable-latest
        imagePullPolicy: Always
        env:
        - name: POD_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RET_MODE
          value: RET_MODE==will-not-start-turkey-updater
        resources:
          requests:
            memory: 50Mi
            cpu: 0.05
          limits:
            memory: 200Mi
            cpu: 0.2              
      # - name: ytdl
      #   image: mozillareality/ytdl:6_2021.6.6
      #   ports:
      #   - containerPort: 8080
      #   imagePullPolicy: IfNotPresent
      ###############################################
      ########## gcsfuse ############################
      ###############################################
      - name: gcsfuse
        image: mozillareality/gcsfuse:stable-latest
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","umount -f /var/gcsfuse"]
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
        env:
        - name: GCP_SA_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: GCP_SA_KEY
        - name: GCS_BUCKET
          value: turkeyfs
        - name: MNT_DIR
          value: /var/gcsfuse
        - name: GCS_DIR
          value: {{.Subdomain}}.{{.Domain}}
        resources:
          requests:
            memory: 50Mi
            cpu: 0.05
          limits:
            memory: 4Gi
            cpu: 2
        volumeMounts:
        - name: fuse
          mountPath: /var/gcsfuse
          mountPropagation: Bidirectional
---
apiVersion: v1
kind: Service
metadata:
  name: ret
  namespace: hc-{{.HubId}}
spec:
  clusterIP: None
  ports:
  - name: https-reticulum
    port: 4000
    targetPort: 4000
  selector:
    app: reticulum
---
########################################################################
######################   hubs   ########################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubs
  namespace: hc-{{.HubId}}
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: hubs
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: hubs
    spec:
      containers:
        - name: hubs
          image: mozillareality/hubs:stable-latest
          imagePullPolicy: Always
          env:
          - name: SUB_DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: SUB_DOMAIN
          - name: DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: DOMAIN
          - name: turkeyCfg_postgrest_server
            value: 
          - name: turkeyCfg_thumbnail_server
            value: https://{{.Subdomain}}-nearspark.{{.Domain}}
          - name: turkeyCfg_base_assets_path
            value: https://{{.Subdomain}}-assets.{{.Domain}}/hubs/
          - name: turkeyCfg_non_cors_proxy_domains
            value: {{.Subdomain}}.{{.Domain}},{{.Subdomain}}-assets.{{.Domain}}
          - name: turkeyCfg_reticulum_server
            value: {{.Subdomain}}.{{.Domain}}
          - name: turkeyCfg_cors_proxy_server
            value: {{.Subdomain}}-cors.{{.Domain}}
          - name: turkeyCfg_ga_tracking_id
            value: 
          - name: turkeyCfg_shortlink_domain
            value: {{.Subdomain}}.{{.Domain}}
          - name: turkeyCfg_ita_server
            value: 
          - name: turkeyCfg_sentry_dsn
            value: 
          livenessProbe:
            httpGet:
              path: https://localhost/healthz
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 120
          resources:
            requests:
              memory: 100Mi
              cpu: 0.05
            limits:
              memory: 1Gi
              cpu: 0.5
---
apiVersion: v1
kind: Service
metadata:
  name: hubs
  namespace: hc-{{.HubId}}
spec:
  clusterIP: None
  ports:
  - name: https-hubs
    port: 8080
    targetPort: 8080
  selector:
    app: hubs
---
########################################################################
######################   spoke   ########################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spoke
  namespace: hc-{{.HubId}}
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: spoke
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: spoke
    spec:
      containers:
        - name: spoke
          image: mozillareality/spoke:stable-latest
          imagePullPolicy: Always
          env:
          - name: SUB_DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: SUB_DOMAIN
          - name: DOMAIN
            valueFrom:
              secretKeyRef:
                name: configs
                key: DOMAIN
          - name: turkeyCfg_base_assets_path
            value: https://{{.Subdomain}}-assets.{{.Domain}}/spoke/
          - name: turkeyCfg_cors_proxy_server
            value: {{.Subdomain}}-cors.{{.Domain}}
          - name: turkeyCfg_ga_tracking_id
            value: 
          - name: turkeyCfg_hubs_server
            value: {{.Subdomain}}.{{.Domain}}
          - name: turkeyCfg_is_moz
            value: "false"
          - name: turkeyCfg_non_cors_proxy_domains
            value: {{.Subdomain}}.{{.Domain}},{{.Subdomain}}-assets.{{.Domain}}
          - name: turkeyCfg_reticulum_server
            value: {{.Subdomain}}.{{.Domain}}
          - name: turkeyCfg_sentry_dsn
            value: 
          - name: turkeyCfg_thumbnail_server
            value: nearspark.hc-{{.HubId}}:5000
          livenessProbe:
            httpGet:
              path: https://localhost/healthz
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 120
          resources:
            requests:
              memory: 100Mi
              cpu: 0.05
            limits:
              memory: 1Gi
              cpu: 0.5
---
apiVersion: v1
kind: Service
metadata:
  name: spoke
  namespace: hc-{{.HubId}}
spec:
  clusterIP: None
  ports:
  - name: https-spoke
    port: 8080
    targetPort: 8080
  selector:
    app: spoke
---
########################################################################
######################   nearspark   ###################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nearspark
  namespace: hc-{{.HubId}}
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: nearspark
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nearspark
    spec:
      containers:
      - name: nearspark
        image: mozillareality/nearspark:stable-latest
        ports:
        - containerPort: 5000
        imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: nearspark
  namespace: hc-{{.HubId}}
spec:
  ports:
  - name: http
    port: 5000
    targetPort: 5000
  selector:
    app: nearspark
---
########################################################################
######################   ita ###########################################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ita
  namespace: hc-{{.HubId}}
  labels:
    CHANNEL: {{.ItaChan}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ita
  minReadySeconds: 2
  template:
    metadata:
      labels:
        app: ita
    spec:
      serviceAccountName: ita-sa
      containers:
      - name: ita
        image: mozillareality/ita:stable-latest
        imagePullPolicy: Always
        env:
        - name: POD_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_DEPLOYMENT_NAME
          value: ita
        - name: CHANNEL
          value: stable
        resources:
          requests:
            memory: 50Mi
            cpu: 0.05
          limits:
            memory: 200Mi
            cpu: 0.2
        livenessProbe:
          httpGet:
            path: http://localhost/healthz
            port: 6000
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 120            
---
########################################################################
######################   ita rbac  #####################################
########################################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ita-sa
  namespace: hc-{{.HubId}}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ita-rb--hc-{{.HubId}}
  namespace: hc-{{.HubId}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit #todo: further tighten this?
subjects:
- kind: ServiceAccount
  name: ita-sa
  namespace: hc-{{.HubId}}            
---
########################################################################
######################   speelycaptor   ###############################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: speelycaptor
  namespace: hc-{{.HubId}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: speelycaptor
  minReadySeconds: 2
  template:
    metadata:
      labels:
        app: speelycaptor
    spec:
      containers:
      - image: mozillareality/speelycaptor:stable-latest
        imagePullPolicy: Always
        name: speelycaptor
        env:
        - name: scratchBucketId
          value: turkey-speelycaptor-scratch-does-not-matter-it-seems
        - name: CLOUD
          value: gcp
        - name: GCP_SA_HMAC_KEY
          valueFrom:
            secretKeyRef:
              name: configs
              key: GCP_SA_HMAC_KEY
        - name: GCP_SA_HMAC_SECRET
          valueFrom:
            secretKeyRef:
              name: configs
              key: GCP_SA_HMAC_SECRET                
        resources:
          requests:
            memory: 50Mi
            cpu: 0.05
          limits:
            memory: 500Mi
            cpu: 0.5
---
apiVersion: v1
kind: Service
metadata:
  name: speelycaptor
  namespace: hc-{{.HubId}}
spec:
  ports:
  - name: speelycaptor
    port: 5000
    targetPort: 5000
  selector:
    app: speelycaptor
---
########################################################################
######################   photomnemonic   ###############################
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: photomnemonic
  namespace: hc-{{.HubId}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photomnemonic
  minReadySeconds: 2
  template:
    metadata:
      labels:
        app: photomnemonic
    spec:
      containers:
      - image: mozillareality/photomnemonic:stable-latest
        imagePullPolicy: Always
        name: photomnemonic
        resources:
          requests:
            memory: 50Mi
            cpu: 0.05
          limits:
            memory: 500Mi
            cpu: 0.5
---
apiVersion: v1
kind: Service
metadata:
  name: photomnemonic
  namespace: hc-{{.HubId}}
spec:
  ports:
  - name: photomnemonic
    port: 5000
    targetPort: 5000
  selector:
    app: photomnemonic