AWSTemplateFormatVersion: 2010-09-09
Description: words

Parameters:
  deploymentId:
    Type: String
    Default: asdf123
  cfS3Folder:
    Type: String
    Default: https://s3.amazonaws.com/turkeycfg/cf/<env>
  VpcCIDR:
    Type: String
    Default: 10.100.0.0/16    
  PublicSubnet1CIDR:
    Type: String
    Default: 10.100.0.0/24
  PublicSubnet2CIDR:
    Type: String
    Default: 10.100.1.0/24
  PrivateSubnet1CIDR:
    Type: String
    Default: 10.100.100.0/24
  PrivateSubnet2CIDR:
    Type: String
    Default: 10.100.101.0/24
  IMGret:  
    Type: String
    Default: docker.io/tanfarming/ret
  IMGdlg:
    Type: String
    Default: docker.io/tanfarming/dialog:dev    
  hpaMINcontainers:
    Type: Number
    Default: 1
  hpaMAXcontainers:
    Type: Number
    Default: 5
  hpaTargetValue:
    Type: Number
    Default: 65
  turkeyDomain:
    Type: String
    Default: quackstack.net
  turkeyCertArn:
    Type: String
    Default: arn:aws:acm:us-east-1:558986605633:certificate/1485441d-9793-4f42-9dff-effcaa92f133
  permsKey:
    Type: String
    Default: -----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA3RY0qLmdthY6Q0RZ4oyNQSL035BmYLNdleX1qVpG1zfQeLWf\n/otgc8Ho2w8y5wW2W5vpI4a0aexNV2evgfsZKtx0q5WWwjsr2xy0Ak1zhWTgZD+F\noHVGJ0xeFse2PnEhrtWalLacTza5RKEJskbNiTTu4fD+UfOCMctlwudNSs+AkmiP\nSxc8nWrZ5BuvdnEXcJOuw0h4oyyUlkmj+Oa/ZQVH44lmPI9Ih0OakXWpIfOob3X0\nXqcdywlMVI2hzBR3JNodRjyEz33p6E//lY4Iodw9NdcRpohGcxcgQ5vf4r4epLIa\ncr0y5w1ZiRyf6BwyqJ6IBpA7yYpws3r9qxmAqwIDAQABAoIBAQCgwy/hbK9wo3MU\nTNRrdzaTob6b/l1jfanUgRYEYl/WyYAu9ir0JhcptVwERmYGNVIoBRQfQClaSHjo\n0L1/b74aO5oe1rR8Yhh+yL1gWz9gRT0hyEr7paswkkhsmiY7+3m5rxsrfinlM+6+\nJ7dsSi3U0ofOBbZ4kvAeEz/Y3OaIOUbQraP312hQnTVQ3kp7HNi9GcLK9rq2mASu\nO0DxDHXdZMsRN1K4tOKRZDsKGAEfL2jKN7+ndvsDhb4mAQaVKM8iw+g5O4HDA8uB\nmwycaWhjilZWEyUyqvXE8tOMLS59sq6i1qrf8zIMWDOizebF/wnrQ42kzt5kQ0ZJ\nwCPOC3sxAoGBAO6KfWr6WsXD6phnjVXXi+1j3azRKJGQorwQ6K3bXmISdlahngas\nmBGBmI7jYTrPPeXAHUbARo/zLcbuGCf1sPipkAHYVC8f9aUbA205BREB15jNyXr3\nXzhR/ronbn0VeR9iRua2FZjVChz22fdz9MvRJiinP8agYIQ4LovDk3lzAoGBAO1E\nrZpOuv3TMQffPaPemWuvMYfZLgx2/AklgYqSoi683vid9HEEAdVzNWMRrOg0w5EH\nWMEMPwJTYvy3xIgcFmezk5RMHTX2J32JzDJ8Y/uGf1wMrdkt3LkPRfuGepEDDtBa\nrUSO/MeGXLu5p8QByUZkvTLJ4rJwF2HZBUehrm3pAoGBANg1+tveNCyRGbAuG/M0\nvgXbwO+FXWojWP1xrhT3gyMNbOm079FI20Ty3F6XRmfRtF7stRyN5udPGaz33jlJ\n/rBEsNybQiK8qyCNzZtQVYFG1C4SSI8GbO5Vk7cTSphhwDlsEKvJWuX+I36BWKts\nFPQwjI/ImIvmjdUKP1Y7XQ51AoGBALWa5Y3ASRvStCqkUlfFH4TuuWiTcM2VnN+b\nV4WrKnu/kKKWs+x09rpbzjcf5kptaGrvRp2sM+Yh0RhByCmt5fBF4OWXRJxy5lMO\nT78supJgpcbc5YvfsJvs9tHIYrPvtT0AyrI5B33od74wIhrCiz5YCQCAygVuCleY\ndpQXSp1RAoGBAKjasot7y/ErVxq7LIpGgoH+XTxjvMsj1JwlMeK0g3sjnun4g4oI\nPBtpER9QaSFi2OeYPklJ2g2yvFcVzj/pFk/n1Zd9pWnbU+JIXBYaHTjmktLeZHsb\nrTEKATo+Y1Alrhpr/z7gXXDfuKKXHkVRiper1YRAxELoLJB8r7LWeuIb\n-----END RSA PRIVATE KEY-----
Resources:
###############################################################################################################
############################################# buckets #########################################################
###############################################################################################################
  assetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub ${AWS::StackName}-assets-${deploymentId}
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - '*'
          AllowedMethods:
          - GET
          - HEAD
          AllowedOrigins:
          - Fn::Sub: https://${AWS::StackName}.${turkeyDomain}
          - Fn::Sub: https://hihc.link
          - Fn::Sub: https://hubs.local:8080
          - Fn::Sub: https://localhost:8080
          ExposedHeaders: []
          MaxAge: 31536000      
  assetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: PublicAssets
        Version: '2012-10-17'
        Statement:
        - Sid: Public-Get-Hubs
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: ${assetsBucket.Arn}/hubs/*
        - Sid: Admin-fullaccess
          Effect: Allow
          Principal: 
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: s3:*
          Resource:
            Fn::Sub: ${assetsBucket.Arn}/*
        - Sid: Local-Get-Keys
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: ${assetsBucket.Arn}/keys/*
          Condition:
            StringEquals:
              'aws:SourceVpc': !GetAtt nw.Outputs.VPC                   
      Bucket:
        Ref: assetsBucket      
    


###############################################################################################################
############################################# configs #########################################################
###############################################################################################################
  retParams:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['-', [!Ref "AWS::StackName", "HAB_RETICULUM"]]
      Type: String
      Value: !Sub 
      - |
        {
          "ret": {"pool":"${AWS::StackName}"},
          "meta": {"phx_host": "${AWS::StackName}.${turkeyDomain}"},
          "discord_client": { "client_id": "", "client_secret": "", "bot_token": "" },
          "email": { "from": "", "server": "", "port": "", "username": "", "password": "" },
          "phx": {
            "port": 4000,
            "url_host": "${AWS::StackName}.${turkeyDomain}", "static_url_port": 4000,
            "cors_proxy_url_host":"${AWS::StackName}-cdn.${turkeyDomain}", "cors_proxy_url_port":443,
            "assets_url_host":"${AWS::StackName}-cdn.${turkeyDomain}", "assets_url_port":443,
            "imgproxy_url_host": "hubs.local", "imgproxy_url_port": 5000,
            "link_url_host":"hubs-link.local", "link_url_port ":4000,
            "secret_key":"txlMOtla===dummySecretkeyToBeGeneratedLater===BGNO3cDXx+7GHLKqt0"
          },
          "guardian": { 
            "perms_key":"${permsKeyToml}",
            "secret_key":"47iqPEdW===dummySecretkeyToBeGeneratedLater===oESnhc76IgCUjaQIwX"
          },
          "janus": { "default_host":"${AWS::StackName}.${turkeyDomain}", "janus_port": 4443, "admin_port": 7000 },
          "uploads": { "host": "", "ttl": 172800, "storage_path": "/tmp" },
          "db": { "username": "postgres", "password": "itjfHE4HuS", "database": "ret_dev", 
            "hostname": "geng-test4turkey-db.ccgehrnbveo1.us-east-1.rds.amazonaws.com", 
            "template": "template0", "pool_size": 10 },
          "session_lock_db": { "username": "postgres", "password": "itjfHE4HuS", "database": "ret_dev", 
            "hostname": "geng-test4turkey-db.ccgehrnbveo1.us-east-1.rds.amazonaws.com", 
            "template": "template0", "pool_size": 10 },
          "sentry":{ "dsn":"https://4eaf10c3fbd14866abbcdb0e7132ec15@o443560.ingest.sentry.io/5869450" },
          "pages": {
            "hubs_page_origin": "https://${AWS::StackName}-cdn.${turkeyDomain}/hubs/pages",
            "spoke_page_origin": "https://hubs.local:9090"
          },
          "assets": { "docs_path": "storage/docs", "assets_path": "storage/assets" }
        }
      - permsKeyToml: 
          Fn::Join:
          - '\\n'
          - Fn::Split:
            - '\n'
            - !Ref permsKey      
  permsKeyParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['-', [!Ref "AWS::StackName", "perms_key"]]
      Type: String
      Value: !Sub ${permsKey}
###############################################################################################################
############################################# iam #########################################################
###############################################################################################################
  iam:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join [ '', [!Ref cfS3Folder, "iam.yaml"] ]
      Parameters:
        mainStackName: !Ref "AWS::StackName"
        retConfigSsmArn: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${retParams}
        permsKeySsmArn: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${permsKeyParam}
###############################################################################################################
####################################### network ###################################################
###############################################################################################################  
  nw:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join [ '', [!Ref cfS3Folder, "network.yaml"] ]
      Parameters:
        mainStackName: !Ref "AWS::StackName"
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        # PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        # PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
###############################################################################################################
############################################# fargate #########################################################
###############################################################################################################
  fg:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join [ '', [!Ref cfS3Folder, "fargate.yaml"] ]
      Parameters:
        mainStackName: !Ref "AWS::StackName"
        ExecutionRole: !GetAtt iam.Outputs.ExecutionRole
        TaskRole: !GetAtt iam.Outputs.TaskRole
        AutoScalingRole: !GetAtt iam.Outputs.AutoScalingRole      
        VPC: !GetAtt nw.Outputs.VPC
        # PrivateSubnet1: !GetAtt nw.Outputs.PrivateSubnet1
        # PrivateSubnet2: !GetAtt nw.Outputs.PrivateSubnet2
        PublicSubnet1: !GetAtt nw.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt nw.Outputs.PublicSubnet2   
        IMGret: !Ref IMGret
        IMGdlg: !Ref IMGdlg
        hpaMINcontainers: !Ref hpaMINcontainers
        hpaMAXcontainers: !Ref hpaMAXcontainers
        hpaTargetValue: !Ref hpaTargetValue
        HttpsCertArn: !Ref turkeyCertArn
        retConfigSsmArn: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${retParams}
        permsKeySsmArn: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${permsKeyParam}
  ig:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${cfS3Folder}ingress.yaml
      Parameters:
        mainStackName: !Ref "AWS::StackName"
        assetsBucket: !Ref assetsBucket
        turkeyDomain: !Ref turkeyDomain
        albDNSname: !GetAtt fg.Outputs.albDNSname
        turkeyCertArn: !Ref turkeyCertArn

##############################################################
################# outputs  ########################
##############################################################

Outputs:
  albDNSname:
    Description: albDNSname
    Value: !GetAtt fg.Outputs.albDNSname
  dnsName:
    Description: dnsName
    Value: !Sub ${AWS::StackName}.${turkeyDomain}?skipadmin
    #!Join ['.', [!Ref "AWS::StackName", !Ref turkeyDomain]]







###############################################################################################
  # HostedZone: 
  #   Type: "AWS::Route53::HostedZone"
  #   Properties: 
  #     HostedZoneConfig: 
  #       Comment: !Ref "AWS::StackName"
  #     Name: !Join ['', [!Ref "AWS::StackName", .]]
  #     VPCs: 
  #       - 
  #         VPCId: !Ref VPC
  #         VPCRegion: !Ref AWS::Region
  # RecordSet:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     AliasTarget:
  #       DNSName: !GetAtt NLB.DNSName   
  #       HostedZoneId: !GetAtt NLB.CanonicalHostedZoneID
  #     Name: !Join ['.', [nlb, !Ref "AWS::StackName"]]
  #     Type: A
  #     HostedZoneId: !Ref HostedZone