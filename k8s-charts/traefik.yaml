apiVersion: v1
kind: Namespace
metadata:
  name: traefik
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-ingress-lb
  namespace: traefik
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      # hostNetwork: true
      serviceAccountName: traefik-ingress-lb
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:v2.5
        imagePullPolicy: IfNotPresent
        name: traefik-ingress-lb
        args:
        - --serversTransport.insecureSkipVerify=true
        - --providers.kubernetesingress=true
        - --providers.kubernetescrd
        - --entryPoints.traefik.address=:1080
        - --entryPoints.https.address=:443
        - --entrypoints.https.http.tls=true
        - --entryPoints.https.forwardedHeaders.insecure=true
        - --entryPoints.https2.address=:4443
        - --entrypoints.https2.http.tls=true
        - --entryPoints.https2.forwardedHeaders.insecure=true
        - --entryPoints.turn.address=:5349
        - --entrypoints.turn.http.tls=true
        - --entryPoints.turn.forwardedHeaders.insecure=true        
        - --api
        - --api.insecure
        - --accesslog
        - --log.level=INFO
        - --pilot.dashboard=false
        - --entryPoints.http.address=:80
        - --entrypoints.http.http.redirections.entryPoint.to=https
        - --entrypoints.http.http.redirections.entryPoint.scheme=https
        - --entrypoints.http.http.redirections.entrypoint.permanent=true
        resources:
          limits:
            memory: 3072Mi
            cpu: 1.5
          requests:
            memory: 1024Mi
            cpu: 1        
---
apiVersion: v1
kind: Service
metadata:
  name: lb
  namespace: traefik
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: ssl
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:558986605633:certificate/47d305ab-f861-470b-a837-98ca52a76e17
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: 443,4443,5349
    service.beta.kubernetes.io/aws-load-balancer-alpn-policy: HTTP2Preferred      
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443   
  - name: https2
    port: 4443
    targetPort: 4443
  - name: turn
    port: 5349
    targetPort: 5349
---
apiVersion: v1
kind: Service
metadata:
  name: dashboard
  namespace: traefik
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - name: dashboard
    port: 1080
    targetPort: 1080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik
  namespace: traefik
  # annotations:
  #   ingress.kubernetes.io/whitelist-x-forwarded-for: "true"
spec:
  entryPoints:
    - https
    # - web
  routes:
  - kind: Rule
    match: Host(`traefik.myhubs.net`) && PathPrefix(`/`)
    # middlewares:                    
    # - name: internal-ip-whitelist             
    #   namespace: traefik            
    services:                       
    - kind: Service
      name: dashboard
      namespace: traefik
      passHostHeader: true
      port: 1080

################### middlewares ##########################

# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: rewrite4cdn
#   namespace: traefik
# spec:
#   stripPrefix:
#     prefixes: 
#       - /_cdn    
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: internal-ip-whitelist
#   namespace: traefik
# spec:
#   ipWhiteList:
#     sourceRange:
#       # - 10.0.0.0/16
#       - 73.53.171.231/32  # gtan@mozilla.com
#     # ipStrategy:
#     #   depth: 2
####################################################################################
################################### RBAC ###########################################
####################################################################################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-lb
  namespace: traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-lb
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
      - middlewaretcps
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
      - serverstransports
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-lb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-lb
subjects:
- kind: ServiceAccount
  name: traefik-ingress-lb
  namespace: traefik 